language: node_js
node_js: '10'

cache:
  yarn: true
  directories:
    - packages/commercetools/api-client/node_modules
    - packages/commercetools/api-client/lib
    - packages/commercetools/helpers/node_modules
    - packages/commercetools/helpers/lib
    - packages/commercetools/composables/node_modules
    - packages/commercetools/composables/lib
    - packages/commercetools/theme/.nuxt
    - packages/commercetools/theme/node_modules
    - packages/core/utils/node_modules
    - packages/core/utils/lib
    - packages/core/factories/node_modules
    - packages/core/factories/lib
    - packages/prismic/node_modules
    - packages/prismic/lib

env:
  global:
    - COMMIT=${TRAVIS_COMMIT::8}

services:
  - docker

install:
  - yarn

jobs:
  include:
    - stage: Build
      name: Build
      script:
      - yarn build:prismic && yarn build:ct

    - stage: test commercetools
      script: yarn test:ct:api-client --coverage
      name: Test api-client
      after_script:
        - cat ./packages/commercetools/api-client/coverage/lcov.info | coveralls

    - stage: test commercetools
      script: yarn test:ct:composables --coverage
      name: Test composables
      after_script:
        - cat ./packages/commercetools/composables/coverage/lcov.info | coveralls

    - stage: test commercetools
      script: yarn test:ct:helpers --coverage
      name: Test helpers
      after_script:
        - cat ./packages/commercetools/helpers/coverage/lcov.info | coveralls

    - stage: test core
      script: yarn test:core:utils --coverage
      name: Test utils
      after_script:
        - cat ./packages/core/utils/coverage/lcov.info | coveralls

    - stage: test core
      script: yarn test:core:factories --coverage
      name: Test factories
      after_script:
        - cat ./packages/core/factories/coverage/lcov.info | coveralls

    - stage: test prismic
      script: yarn test:prismic --coverage
      name: Test prismic
      after_script:
        - cat ./packages/prismic/coverage/lcov.info | coveralls

    - build_image:
      if: branch = master AND type != pull_request
      name: "Build docker image"
      stage: docker_build
      script:
        - docker build --build-arg COMMIT -t registry.storefrontcloud.io/vsf-next-demo-storefrontcloud-io/vue-storefront:$COMMIT -f dev/docker/Dockerfile .
        - echo $DOCKER_PASSWORD | docker login  -u="$DOCKER_USERNAME" --password-stdin registry.storefrontcloud.io
        - docker push registry.storefrontcloud.io/vsf-next-demo-storefrontcloud-io/vue-storefront:$COMMIT

    - deploy_to_storefrontcloud:
      if: branch = master AND type != pull_request
      name: "Deploy to StorefrontCloud"
      stage: deploy
      script:
        - "curl -u $CLOUD_USERNAME:$CLOUD_PASSWORD -H 'Content-Type: application/json' -X POST -d \"{\\\"code\\\":\\\"vsf-next-demo\\\", \\\"frontContainerVersion\\\":\\\"$COMMIT\\\"}\" https://farmer.storefrontcloud.io/instances"

